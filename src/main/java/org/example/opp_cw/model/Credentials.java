package org.example.opp_cw.model;

import jakarta.validation.Valid;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.Data;
import org.example.opp_cw.annotation.IsObjectIdValid;
import org.example.opp_cw.annotation.IsPasswordValid;
import org.example.opp_cw.annotation.IsUserNameValid;
import org.example.opp_cw.annotation.IsValueNull;
import org.example.opp_cw.dto.RandomSecureCode;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.FieldType;
import org.springframework.data.mongodb.core.mapping.MongoId;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import java.util.List;

@Document
@Data
public class Credentials {
    @MongoId(FieldType.STRING)
    private String id;
    @NotBlank
    @IsObjectIdValid
    private String ownerId;
    @NotBlank
    @IsUserNameValid
    private String userName;
    private String password;

    @IsValueNull(message = "back up codes must be null. They are generated by the system")
    private List<RandomSecureCode> backUpCodes;

    public void setPassword(@NotBlank @IsPasswordValid String password) {
        BCryptPasswordEncoder encoder = new BCryptPasswordEncoder(16);
        this.password = encoder.encode(password);
    }
}
